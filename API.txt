URI.path(/album/)
GET
Input  : id
Output : {
    cover_photo string          
    created_time  datetime
    description string
    from  User
    location  string
    name  string
    privacy starring
    photos string
}

POST
Input :
{
    id    string
    can_upload    boolean
    count   int
    cover_photo   string
    created_time    datetime
    description   string
    from    User
    link    string
    location    string
    name    string
    place   Page
    privacy   string
    type    enum{app, cover, profile, mobile, wall, normal, album}
    updated_time    datetime
}
Output : {Success_msg}

DELETE
Input  : id
Output : {Success_msg}
--------------------------------------------------------------------------------

COMMENT --> PRIVATE API
GET
Input  : id
Output : {
    id  string
    created_time  datetime
    from  User
    like_count  int32
    message string
    object  Object
    parent  comment
}

POST
Input : {
    id  string
    created_time  datetime
    from  User
    like_count  int32
    message string
    object  Object
    parent  comment
}
Output : {Success_msg}

DELETE
Input  : id
Output : {Success_msg}
--------------------------------------------------------------------------------

URI.path(/conversation/)
GET
Input  : id
Output : {
    id  string
    snippet string
    updated_time  datetime
    message_count int
    unread_count  int
    tags  object
    participants  User[]
    senders User[]
    can_reply boolean
    is_subscribed boolean
}

POST
Input : {
    id  string
    snippet string
    updated_time  datetime
    message_count int
    unread_count  int
    tags  object
    participants  User[]
    senders User[]
    can_reply boolean
    is_subscribed boolean
}
Output : {Success_msg}

DELETE
Input  : id
Output : {Success_msg}
--------------------------------------------------------------------------------

URI.path(/friendlist/)
GET
Input  : id
Output : {
    id
    numeric string
    name
    string
    list_type
    enum
    owner
    numeric string
}

POST
Input : {
    id
    numeric string
    name
    string
    list_type
    enum
    owner
    numeric string
}
Output : {Success_msg}

DELETE
Input  : id
Output : {Success_msg}
--------------------------------------------------------------------------------

URI.path(/group/)
GET
Input  : id
Output : {
    id  string
    cover CoverPhoto
    description string
    email string
    icon  string
    link  string
    member_request_count  int
    name  string
    owner User|Page
    parent  Group|Page|App
    privacy string
    updated_time  datetime
}

POST
Input : {
    id  string
    cover CoverPhoto
    description string
    email string
    icon  string
    link  string
    member_request_count  int
    name  string
    owner User|Page
    parent  Group|Page|App
    privacy string
    updated_time  datetime
}
Output : {Success_msg}

DELETE
Input  : id
Output : {Success_msg}
--------------------------------------------------------------------------------

URI.path(/groupdoc/)
GET
Input  : id
Output : {
    id  string
    from  User|Page
    subject string
    message string
    icon  string
    created_time  datetime
    updated_time  datetime
    revision  int
    can_edit  boolean
    can_delete  boolean
}

POST
Input : {
    id  string
    from  User|Page
    subject string
    message string
    icon  string
    created_time  datetime
    updated_time  datetime
    revision  int
    can_edit  boolean
    can_delete  boolean
}
Output : {Success_msg}

DELETE
Input  : id
Output : {Success_msg}
--------------------------------------------------------------------------------

URI.path(/link/)    *what does this do?
GET
Input  : id
Output : {
    id  string
    created_time  datetime
    description string
    from  User
    icon  string
    link  string
    message string
    name  string
    picture string
}

POST
Input : {
    id  string
    created_time  datetime
    description string
    from  User
    icon  string
    link  string
    message string
    name  string
    picture string
}
Output : {Success_msg}

DELETE
Input  : id
Output : {Success_msg}
--------------------------------------------------------------------------------

URI.path(/message/) *shud it be a private api?
GET
Input  : id
Output : {
    created_time  datetime
    from  Profile
    id  string
    message string
    subject string
    tags  object[]
    to  Profile[]
}

POST
Input : {
    created_time  datetime
    from  Profile
    id  string
    message string
    subject string
    tags  object[]
    to  Profile[]
}
Output : {Success_msg}

DELETE
Input  : id
Output : {Success_msg}
--------------------------------------------------------------------------------

URI.path(/notification/)    *do we even require this path translation?

GET
Input  : id
Output : {
    id  string
    from  User|Page|App
    to  User
    created_time  datetime
    updated_time  datetime
    title string
    link  string
    application App
    unread  int
    object  Object
}

POST
Input : {
    id  string
    from  User|Page|App
    to  User
    created_time  datetime
    updated_time  datetime
    title string
    link  string
    application App
    unread  int
    object  Object
}
Output : {Success_msg}

DELETE
Input  : id
Output : {Success_msg}
--------------------------------------------------------------------------------

URI.path(/objcomments/)
GET
Input  : id
Output : {
    order enum{chronological, ranked}
    total_count int32
}

POST
Input : {
    order enum{chronological, ranked}
    total_count int32
}
Output : {Success_msg}

DELETE
Input  : id
Output : {Success_msg}
--------------------------------------------------------------------------------

URI.path(/objlikes/)
GET
Input  : id
Output : {
    total_count int32
}

POST
Input : {
    total_count int32
}
Output : {Success_msg}

DELETE
Input  : id
Output : {Success_msg}
--------------------------------------------------------------------------------

URI.path(/post/)
GET
Input  : id
Output : {
    id  string
    admin_creator object[]
    application App
    call_to_action  object
    caption string
    created_time  datetime
    description string
    feed_targeting  object
    from  Profile
    icon  string
    is_hidden boolean
    is_published  boolean
    link  string
    message string
    message_tags  object
    name  string
    object_id string
    picture string
    place Place
    privacy object
    properties  object[]
    shares  object
    source  string
    status_type enum{mobile_status_update, created_note, added_photos, added_video, shared_story, created_group, created_event, wall_post, app_created_story, published_story, tagged_in_photo, approved_friend}
    story string
    story_tags  array
    targeting object
    to  Profile[]
    type  enum{link, status, photo, video, offer}
    updated_time  datetime
    with_tags JSON object with a data field that contains a list of Profile objects.
}

POST
Input : {
    id  string
    admin_creator object[]
    application App
    call_to_action  object
    caption string
    created_time  datetime
    description string
    feed_targeting  object
    from  Profile
    icon  string
    is_hidden boolean
    is_published  boolean
    link  string
    message string
    message_tags  object
    name  string
    object_id string
    picture string
    place Place
    privacy object
    properties  object[]
    shares  object
    source  string
    status_type enum{mobile_status_update, created_note, added_photos, added_video, shared_story, created_group, created_event, wall_post, app_created_story,   published_story, tagged_in_photo, approved_friend}
    story string
    story_tags  array
    targeting object
    to  Profile[]
    type  enum{link, status, photo, video, offer}
    updated_time  datetime
    with_tags JSON object with a data field that contains a list of Profile objects.
}
Output : {Success_msg}

DELETE
Input  : id
Output : {Success_msg}
--------------------------------------------------------------------------------

URI.path(/page/)
GET
Input  : id
Output : {
    id numeric string
    about string
    access_token string
    ad_campaign AdCampaign
    affiliation string
    app_id id
    app_links AppLinks
    artists_we_likestring
    attire string
    awards string
    band_interests string
    band_members string
    best_page Page
    bio string
    birthday string
    booking_agent string
    built string
    business can_checkin
    bool
    can_post bool
    category string
    category_list list<PageCategory>
    company_overview string
    contact_address MailingAddress
    context OpenGraphContext
    country_page_likes unsigned int32
    cover CoverPhoto
    culinary_team string
    current_location string
    description string
    description_html string
    directed_by string
    display_subtext string
    emails list<string>
    features string
    food_styles list<string>
    founded string
    general_info string
    general_manager string
    genre string
    global_brand_page_name string
    global_brand_root_id numeric string
    has_added_app bool
    leadgen_tos_accepted bool
    hometown string
    hours map<string, string>
    impressum string
    influences string
    is_always_open bool
    is_community_page bool
    is_permanently_closed bool
    is_published bool
    is_unclaimed bool
    is_verified bool
    keywords null
    link string
    location Location
    mission string
    mpg string
    name string
    name_with_location_descriptor string
    network string
    new_like_count unsigned int32
    offer_eligible bool
    parent_page Page
    parking PageParking
    payment_options PagePaymentOptions
    personal_info string
    personal_interests string
    pharma_safety_info string
    phone string
    plot_outline string
    press_contact string
    price_range string
    produced_by string
    products string
    promotion_eligible bool
    promotion_ineligible_reason string
    public_transit string
    record_label string
    release_date string
    restaurant_services PageRestaurantServices
    restaurant_specialties PageRestaurantSpecialties
    schedule string
    screenplay_by string
    season string
    starring string
    start_info PageStartInfo
    store_location_descriptor string
    store_number unsigned int32
    studio string
    talking_about_count unsigned int32
    engagement Engagement
    single_line_address string
    place_type enum
    unread_message_count unsigned int32
    unread_notif_count unsigned int32
    unseen_message_count unsigned int32
    username string
    voip_info VoipInfo website string
    were_here_count unsigned int32
    written_by string
    featured_video Video
    owner_business Business
    last_used_time datetime
    asset_score float
    checkins unsigned int32
    likes unsigned int32
    members string
}

POST:
Input : {
    id numeric string
    about string
    access_token string
    ad_campaign AdCampaign
    affiliation string
    app_id id
    app_links AppLinks
    artists_we_likestring
    attire string
    awards string
    band_interests string
    band_members string
    best_page Page
    bio string
    birthday string
    booking_agent string
    built string
    business can_checkin
    bool
    can_post bool
    category string
    category_list list<PageCategory>
    company_overview string
    contact_address MailingAddress
    context OpenGraphContext
    country_page_likes unsigned int32
    cover CoverPhoto
    culinary_team string
    current_location string
    description string
    description_html string
    directed_by string
    display_subtext string
    emails list<string>
    features string
    food_styles list<string>
    founded string
    general_info string
    general_manager string
    genre string
    global_brand_page_name string
    global_brand_root_id numeric string
    has_added_app bool
    leadgen_tos_accepted bool
    hometown string
    hours map<string, string>
    impressum string
    influences string
    is_always_open bool
    is_community_page bool
    is_permanently_closed bool
    is_published bool
    is_unclaimed bool
    is_verified bool
    keywords null
    link string
    location Location
    mission string
    mpg string
    name string
    name_with_location_descriptor string
    network string
    new_like_count unsigned int32
    offer_eligible bool
    parent_page Page
    parking PageParking
    payment_options PagePaymentOptions
    personal_info string
    personal_interests string
    pharma_safety_info string
    phone string
    plot_outline string
    press_contact string
    price_range string
    produced_by string
    products string
    promotion_eligible bool
    promotion_ineligible_reason string
    public_transit string
    record_label string
    release_date string
    restaurant_services PageRestaurantServices
    restaurant_specialties PageRestaurantSpecialties
    schedule string
    screenplay_by string
    season string
    starring string
    start_info PageStartInfo
    store_location_descriptor string
    store_number unsigned int32
    studio string
    talking_about_count unsigned int32
    engagement Engagement
    single_line_address string
    place_type enum
    unread_message_count unsigned int32
    unread_notif_count unsigned int32
    unseen_message_count unsigned int32
    username string
    voip_info VoipInfo website string
    were_here_count unsigned int32
    written_by string
    featured_video Video
    owner_business Business
    last_used_time datetime
    asset_score float
    checkins unsigned int32
    likes unsigned int32
    members string
}
Output : {Success_msg}

DELETE
Input  : id
Output : {Success_msg}
--------------------------------------------------------------------------------

URI.path(/photo/)
GET
Input  : id
Output : {
    id numeric string
    album Album
    created_time datetime
    can_delete bool
    can_tag bool
    from User|Page
    height unsigned int32
    icon string
    images list<PlatformImageSource>
    link string
    name string
    name_tags list<EntityAtTextRange>
    page_story_id string
    position unsigned int32
    source string
    updated_time datetime
    width unsigned int32
    event Event
    place Place
    backdated_time datetime
    backdated_time_granularity enum
    picture string
}

POST
Input : {
    id numeric string
    album Album
    created_time datetime
    can_delete bool
    can_tag bool
    from User|Page
    height unsigned int32
    icon string
    images list<PlatformImageSource>
    link string
    name string
    name_tags list<EntityAtTextRange>
    page_story_id string
    position unsigned int32
    source string
    updated_time datetime
    width unsigned int32
    event Event
    place Place
    backdated_time datetime
    backdated_time_granularity enum
    picture string
}
Output : {Success_msg}

DELETE
Input  : id
Output : {Success_msg}
--------------------------------------------------------------------------------

URI.path(/status/)
GET
Input  : id
Output : {
    id  string
    event Event
    from  Profile
    message string
    place Page
    updated_time  datetime
}

POST
Input : {
    id  string
    event Event
    from  Profile
    message string
    place Page
    updated_time  datetime
}
Output : {Success_msg}

DELETE
Input  : id
Output : {Success_msg}
--------------------------------------------------------------------------------

URI.path(/thread/)
GET
Input  : id
Output : {
    id  string
    comments  Message[]
    to  Profile[]
    unread  integer
    unseen  integer
    updated_time  datetime
}

POST
Input : {
    id  string
    comments  Message[]
    to  Profile[]
    unread  integer
    unseen  integer
    updated_time  datetime
}
Output : {Success_msg}

DELETE
Input  : id
Output : {Success_msg}
--------------------------------------------------------------------------------

URI.path(/user/)
GET
Input  : id
Output : {
    id numeric string
    about string
    age_range AgeRange
    bio string
    birthday string
    context UserContext
    currency Currency
    devices list<UserDevice>
    education list<EducationExperience>
    email string
    favorite_athletes list<Experience>
    favorite_teams list<Experience>
    first_name string
    gender string
    hometown Page
    inspirational_people list<Experience>
    install_type enum
    installed bool
    interested_in list<string>
    is_shared_login bool
    is_verified bool
    languages list<Experience>
    last_name string
    link string
    location Page
    locale string
    meeting_for list<string>
    middle_name string
    name string
    name_format string
    payment_pricepoints PaymentPricepoints
    test_group unsigned int32
    political string
    relationship_status string
    religion string
    security_settings SecuritySettings
    significant_other User
    sports list<Experience>
    quotes string
    third_party_id string
    timezone float (min: -24) (max: 24)
    token_for_business string
    updated_time datetime
    shared_login_upgrade_required_by datetime
    verified bool
    video_upload_limits VideoUploadLimits
    viewer_can_send_gift bool
    website string
    work list<WorkExperience>
    public_key string
    cover CoverPhoto
}

POST
Input : {
    id numeric string
    about string
    age_range AgeRange
    bio string
    birthday string
    context UserContext
    currency Currency
    devices list<UserDevice>
    education list<EducationExperience>
    email string
    favorite_athletes list<Experience>
    favorite_teams list<Experience>
    first_name string
    gender string
    hometown Page
    inspirational_people list<Experience>
    install_type enum
    installed bool
    interested_in list<string>
    is_shared_login bool
    is_verified bool
    languages list<Experience>
    last_name string
    link string
    location Page
    locale string
    meeting_for list<string>
    middle_name string
    name string
    name_format string
    payment_pricepoints PaymentPricepoints
    test_group unsigned int32
    political string
    relationship_status string
    religion string
    security_settings SecuritySettings
    significant_other User
    sports list<Experience>
    quotes string
    third_party_id string
    timezone float (min: -24) (max: 24)
    token_for_business string
    updated_time datetime
    shared_login_upgrade_required_by datetime
    verified bool
    video_upload_limits VideoUploadLimits
    viewer_can_send_gift bool
    website string
    work list<WorkExperience>
    public_key string
    cover CoverPhoto
}
Output : {Success_msg}

DELETE
Input  : id
Output : {Success_msg}
